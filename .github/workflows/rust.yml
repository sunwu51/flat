name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2022, macos-13, macos-13-arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        run: cargo build --release

      - name: Archive Production Artifacts
        run: |
            test -e target/release/jtxt.exe && zip -r jtxt-{matrix.os}.zip  target/release/jtxt.exe
            test -e target/release/jtxt && zip -r jtxt-{matrix.os}.zip  target/release/jtxt
        shell: bash
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: jtxt-{matrix.os}.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
